
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  company_id: 'company_id',
  company_uuid: 'company_uuid',
  company_name: 'company_name',
  company_description: 'company_description',
  company_website: 'company_website',
  establishment_date: 'establishment_date',
  company_size: 'company_size',
  is_active: 'is_active',
  company_email: 'company_email',
  phone_number: 'phone_number',
  company_country_id: 'company_country_id',
  company_state_id: 'company_state_id',
  company_city_id: 'company_city_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Company_imageScalarFieldEnum = {
  company_image_id: 'company_image_id',
  company_id: 'company_id',
  company_image: 'company_image',
  is_primary: 'is_primary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Company_industryScalarFieldEnum = {
  company_industry_id: 'company_industry_id',
  company_industry_uuid: 'company_industry_uuid',
  company_id: 'company_id',
  industry_category_id: 'industry_category_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Industry_categoryScalarFieldEnum = {
  industry_category_id: 'industry_category_id',
  industry_name: 'industry_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.JobScalarFieldEnum = {
  job_id: 'job_id',
  job_uuid: 'job_uuid',
  job_company: 'job_company',
  job_description: 'job_description',
  job_name: 'job_name',
  job_posted_date: 'job_posted_date',
  apply_link: 'apply_link',
  salary_min: 'salary_min',
  salary_max: 'salary_max',
  salary_currency: 'salary_currency',
  salary_frequency: 'salary_frequency',
  job_status: 'job_status',
  is_remote: 'is_remote',
  job_country_id: 'job_country_id',
  job_state_id: 'job_state_id',
  job_city_id: 'job_city_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_categoryScalarFieldEnum = {
  job_category_id: 'job_category_id',
  job_category_name: 'job_category_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_category_mapScalarFieldEnum = {
  job_category_map_id: 'job_category_map_id',
  job_category_map_uuid: 'job_category_map_uuid',
  job_id: 'job_id',
  category_id: 'category_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_salaryScalarFieldEnum = {
  job_salary_id: 'job_salary_id',
  job_salary_name: 'job_salary_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_salary_mapScalarFieldEnum = {
  job_salary_map_id: 'job_salary_map_id',
  job_salary_map_uuid: 'job_salary_map_uuid',
  job_id: 'job_id',
  salary_id: 'salary_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_scheduleScalarFieldEnum = {
  job_schedule_id: 'job_schedule_id',
  job_schedule_name: 'job_schedule_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_schedule_mapScalarFieldEnum = {
  job_schedule_map_id: 'job_schedule_map_id',
  job_schedule_map_uuid: 'job_schedule_map_uuid',
  job_id: 'job_id',
  schedule_id: 'schedule_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_skillScalarFieldEnum = {
  job_skill_id: 'job_skill_id',
  job_skill_name: 'job_skill_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_skill_mapScalarFieldEnum = {
  job_skill_map_id: 'job_skill_map_id',
  job_skill_map_uuid: 'job_skill_map_uuid',
  job_id: 'job_id',
  skill_id: 'skill_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_sourceScalarFieldEnum = {
  job_source_id: 'job_source_id',
  job_source_name: 'job_source_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_source_mapScalarFieldEnum = {
  job_source_map_id: 'job_source_map_id',
  job_source_map_uuid: 'job_source_map_uuid',
  job_id: 'job_id',
  source_id: 'source_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_typeScalarFieldEnum = {
  job_type_id: 'job_type_id',
  job_type_name: 'job_type_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_type_mapScalarFieldEnum = {
  job_type_map_id: 'job_type_map_id',
  job_type_map_uuid: 'job_type_map_uuid',
  job_id: 'job_id',
  type_id: 'type_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CityScalarFieldEnum = {
  city_id: 'city_id',
  city_name: 'city_name',
  state_id: 'state_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CountryScalarFieldEnum = {
  country_id: 'country_id',
  country_name: 'country_name',
  country_code: 'country_code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StateScalarFieldEnum = {
  state_id: 'state_id',
  state_name: 'state_name',
  state_code: 'state_code',
  country_id: 'country_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.companySizes = exports.$Enums.companySizes = {
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  LARGE: 'LARGE',
  ENTERPRISE: 'ENTERPRISE'
};

exports.salaryFrequency = exports.$Enums.salaryFrequency = {
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY',
  PROGRESSIVE: 'PROGRESSIVE'
};

exports.Prisma.ModelName = {
  company: 'company',
  company_image: 'company_image',
  company_industry: 'company_industry',
  industry_category: 'industry_category',
  job: 'job',
  job_category: 'job_category',
  job_category_map: 'job_category_map',
  job_salary: 'job_salary',
  job_salary_map: 'job_salary_map',
  job_schedule: 'job_schedule',
  job_schedule_map: 'job_schedule_map',
  job_skill: 'job_skill',
  job_skill_map: 'job_skill_map',
  job_source: 'job_source',
  job_source_map: 'job_source_map',
  job_type: 'job_type',
  job_type_map: 'job_type_map',
  city: 'city',
  country: 'country',
  state: 'state'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
